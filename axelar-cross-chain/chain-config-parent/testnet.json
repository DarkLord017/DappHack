[
  {
    "name": "Filecoin",
    "id": "filecoin-2",
    "axelarId": "filecoin-2",
    "chainId": 314159,
    "rpc": "https://api.calibration.node.glif.io/rpc/v1",
    "tokenSymbol": "FIL",
    "contracts": {
      "ConstAddressDeployer": {
        "address": "0x98B2920D53612483F91F12Ed7754E51b4A77919e"
      },
      "AxelarGateway": {
        "address": "0x999117D44220F33e0441fbAb2A5aDB8FF485c54D",
        "implementation": "0x99B5FA03a5ea4315725c43346e55a6A6fbd94098",
        "authModule": "0xaDa0F9d5698459a57c2c8b9c380398E71C69D6fA",
        "tokenDeployer": "0xb28478319B64f8D47e19A120209A211D902F8b8f",
        "deployer": "0x6f24A47Fc8AE5441Eb47EFfC3665e70e69Ac3F05",
        "implementationCodehash": "0xc3516b0df24004564d42ebd7c4e4d3814655ea19ec2535627ebcdced0970cccd",
        "deploymentMethod": "create3",
        "salt": "AxelarGateway v6.2"
      },
      "AxelarGasService": {
        "collector": "0x7F83F5cA2AE4206AbFf8a3C3668e88ce5F11C0B5",
        "address": "0xbe406f0189a0b4cf3a05c286473d23791dd44cc6",
        "implementation": "0xA72afaa3130fE7F25CfcA4A49ed48e377a35aB6C",
        "deployer": "0x5b593E7b1725dc6FcbbFe80b2415B19153F94A85",
        "owner": "0x6f24A47Fc8AE5441Eb47EFfC3665e70e69Ac3F05"
      },
      "AxelarDepositService": {
        "wrappedSymbol": "",
        "refundIssuer": "0x4f671f34d2d23fec3eE3087E3A0221f8D314D9dF",
        "salt": "AxelarDepositService",
        "address": "0xc1DCb196BA862B337Aa23eDA1Cb9503C0801b955",
        "implementation": "0xd883C8bA523253c93d97b6C7a5087a7B5ff23d79",
        "deployer": "0xd55cd98cdE61c3CcE1286F9aF50cDbF16f5dba5b"
      },
      "Create3Deployer": {
        "salt": "Create3Deployer",
        "address": "0x6513Aedb4D1593BA12e50644401D976aebDc90d8",
        "deployer": "0x6f24A47Fc8AE5441Eb47EFfC3665e70e69Ac3F05",
        "deploymentMethod": "create2",
        "codehash": "0xf0ad66defbe082df243d4d274e626f557f97579c5c9e19f33d8093d6160808b7",
        "predeployCodehash": "0x73fc31262c4bad113c79439fd231281201c7c7d45b50328bd86bccf37684bf92"
      },
      "InterchainProposalSender": {
        "address": "0x1f8A4d195B647647c7dD45650CBd553FD33cCAA6",
        "deployer": "0x6f24A47Fc8AE5441Eb47EFfC3665e70e69Ac3F05",
        "deploymentMethod": "create3",
        "salt": "InterchainProposalSender v1.2"
      },
      "Operators": {
        "owner": "0xB8Cd93C83A974649D76B1c19f311f639e62272BC",
        "address": "0x7F83F5cA2AE4206AbFf8a3C3668e88ce5F11C0B5",
        "deployer": "0xB8Cd93C83A974649D76B1c19f311f639e62272BC",
        "deploymentMethod": "create2",
        "salt": "Operators"
      },
      "InterchainGovernance": {
        "governanceChain": "Axelarnet",
        "governanceAddress": "axelar10d07y265gmmuvt4z0w9aw880jnsr700j7v9daj",
        "minimumTimeDelay": 300,
        "address": "0xfDF36A30070ea0241d69052ea85ff44Ad0476a66",
        "deployer": "0x6f24A47Fc8AE5441Eb47EFfC3665e70e69Ac3F05",
        "deploymentMethod": "create3",
        "codehash": "0x0a188afb57c6c5caec589da3096f75f674e48a8a8abb5d747a251630dbf5b2ab",
        "predeployCodehash": "0xe2de43b29f2387b6f3575a1b50d566908fc00e03a8d88ad6be74b674a70874d2",
        "salt": "InterchainGovernance v5.5"
      },
      "Multisig": {
        "threshold": 2,
        "signers": [
          "0x15837c1318AB83d99b19392Fd4811813f520d843",
          "0x64247a441CeF0b7A46614AC34d046c0fdfe35954",
          "0xEE64c8eb48437DbD2D5B8598dc4A3E8a6c8CEaD9"
        ],
        "address": "0xCC940AE49C78F20E3F13F3cF37e996b98Ac3EC68",
        "deployer": "0x6f24A47Fc8AE5441Eb47EFfC3665e70e69Ac3F05",
        "deploymentMethod": "create3",
        "codehash": "0x912095d5076ee40a9dd49c0f9d61d61334c47a78c7512852791652baef26c296",
        "predeployCodehash": "0x912095d5076ee40a9dd49c0f9d61d61334c47a78c7512852791652baef26c296",
        "salt": "Multisig v5.5"
      },
      "InterchainTokenService": {
        "salt": "ITS v1.2.4",
        "deployer": "0x6f24A47Fc8AE5441Eb47EFfC3665e70e69Ac3F05",
        "tokenManagerDeployer": "0x121b0e54Cd7ad2BBCb4c4C9275697978EBaF3653",
        "interchainToken": "0x7F9F70Da4af54671a6abAc58e705b5634cac8819",
        "interchainTokenDeployer": "0x58667c5f134420Bf6904C7dD01fDDcB4Fea3a760",
        "tokenManager": "0x81a0545091864617E7037171FdfcBbdCFE3aeb23",
        "tokenHandler": "0x07715674F74c560200c7C95430673180812fCE73",
        "implementation": "0x6d59D9360BDAe406614b7E61c53F43a03198A4ef",
        "address": "0xB5FB4BE02232B1bBA4dC8f81dc24C26980dE9e3C",
        "proxySalt": "ITS v1.0.0"
      },
      "InterchainTokenFactory": {
        "salt": "ITS Factory v1.0.0",
        "deployer": "0x6f24A47Fc8AE5441Eb47EFfC3665e70e69Ac3F05",
        "implementation": "0xA852412D2d91fE05d790934B6E64C3C351fAB54f",
        "address": "0x83a93500d23Fbc3e82B410aD07A6a9F7A0670D66"
      }
    },
    "explorer": {
      "name": "Filfox",
      "url": "https://calibration.filfox.info"
    },
    "gasOptions": {
      "gasLimit": 300000000
    },
    "confirmations": 3,
    "eip1559": true,
    "finality": "120",
    "approxFinalityWaitTime": 60,
    "txTimeout": 180000,
    "AxelarGasService": {
      "address": "0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6"
    },
    "gateway": "0x999117D44220F33e0441fbAb2A5aDB8FF485c54D",
    "gasService": "0xbe406f0189a0b4cf3a05c286473d23791dd44cc6",
    "contract": {
      "abi": [
        "constructor(uint256 startTime, uint256 endTime, uint256 maxParticipants, uint256 teamSizeLimit, address[] organizers, string name, string symbol, address gateway_, address gasReceiver_)",
        "error InvalidAddress()",
        "error InvalidProject(uint256 teamNumber)",
        "error InvalidTeamSize(uint256 teamSize, uint256 teamSizeLimit)",
        "error MaxParticipantsReached(uint256 maxParticipants)",
        "error NotApprovedByGateway()",
        "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
        "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
        "event BuilderSignedUp(address indexed builder)",
        "event PrizeDistributed(uint256 amount)",
        "event PrizePoolChanged(address indexed sponsor, uint256 oldPrize, uint256 newPrize)",
        "event ProjectSubmitted(uint256 teamNumber, string nftUri)",
        "event SponsorSignedUp(string name, address indexed sponsor, uint256 prize)",
        "event TeamInitialized(string name, address[] participants)",
        "event TeamJoined(uint256 index, address indexed builder)",
        "event TeamLeft(uint256 index, address indexed builder)",
        "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
        "event WinnerJudged(uint256 trackNumber, uint256 winnerNumber)",
        "function STAKE() view returns (uint256)",
        "function approve(address to, uint256 tokenId)",
        "function balanceOf(address owner) view returns (uint256)",
        "function builderSignup() payable",
        "function builderToTeam(address) view returns (string name, bool validProject, bool projectSubmitted)",
        "function crosssubmitProject(uint256 teamNumber, string nftUri)",
        "function distributePrize() payable",
        "function distributePrizePool(uint256 prize, tuple(string name, address[] participants, bool validProject, bool projectSubmitted) team) payable",
        "function distributePrizeTrack(uint256 prize, tuple(string name, address[] participants, bool validProject, bool projectSubmitted) team) payable",
        "function execute(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload)",
        "function executeWithToken(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload, string tokenSymbol, uint256 amount)",
        "function gasService() view returns (address)",
        "function gateway() view returns (address)",
        "function getApproved(uint256 tokenId) view returns (address)",
        "function getBuilderAddress(uint256 builderNumber) view returns (address)",
        "function getBuilderCount() view returns (uint256)",
        "function getSponsorAddress(uint256 sponsorNumber) view returns (address)",
        "function getSponsorCount() view returns (uint256)",
        "function getSponsorName(uint256 sponsorNumber) view returns (string)",
        "function getSponsorPrizePool(uint256 sponsorNumber) view returns (uint256)",
        "function getTeamCount() view returns (uint256)",
        "function getTeamName(uint256 teamNumber) view returns (string)",
        "function getTeamParticipantAddress(uint256 teamNumber, uint256 participantNumber) view returns (address)",
        "function getTeamSize(uint256 teamNumber) view returns (uint256)",
        "function getWinnerCount() view returns (uint256)",
        "function getWinnerPoolPrizeWinners(uint256 winnerNumber) view returns (uint256[])",
        "function getWinnerTrackWinners(uint256 winnerNumber) view returns (uint256[])",
        "function initializeTeam(string name, address[] participants)",
        "function isApprovedForAll(address owner, address operator) view returns (bool)",
        "function joinTeam(uint256 teamIndex)",
        "function judgeWinner(string _sponsor_name, uint256[] trackWinners, uint256[] poolPrizeWinners)",
        "function name() view returns (string)",
        "function ownerOf(uint256 tokenId) view returns (address)",
        "function returnStake() payable",
        "function s_builders(uint256) view returns (address)",
        "function s_endTime() view returns (uint256)",
        "function s_maxParticipants() view returns (uint256)",
        "function s_organizers(uint256) view returns (address)",
        "function s_sponsors(uint256) view returns (string name, uint256 poolPrize, uint256 numberOfPoolPrize)",
        "function s_startTime() view returns (uint256)",
        "function s_teamSizeLimit() view returns (uint256)",
        "function s_teams(uint256) view returns (string name, bool validProject, bool projectSubmitted)",
        "function s_totalPrizePool() view returns (uint256)",
        "function s_winners(uint256) view returns (string name)",
        "function safeTransferFrom(address from, address to, uint256 tokenId)",
        "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
        "function setApprovalForAll(address operator, bool approved)",
        "function sponsorPrizePool(uint256) view returns (uint256)",
        "function sponsorSignup(string name, address[] _sponsors, uint256[] _prizeArray, uint256 _poolPrize, uint256 _number0fPoolPrize) payable",
        "function sponsorToId(address) view returns (uint256)",
        "function sponsorToSponsorProtocol(address) view returns (string name, uint256 poolPrize, uint256 numberOfPoolPrize)",
        "function sponsorToWinner(uint256) view returns (string name)",
        "function submitProject(uint256 teamNumber, string nftUri)",
        "function supportsInterface(bytes4 interfaceId) view returns (bool)",
        "function symbol() view returns (string)",
        "function tokenIdOf(address owner) view returns (uint256)",
        "function tokenURI(uint256 tokenId) view returns (string)",
        "function transferFrom(address from, address to, uint256 tokenId)",
        "function withdrawTeam(uint256 participantIndex, uint256 TeamIndex)"
      ],
      "address": "0x8CBC7F3ddB155c2a030DDd64509C8a775657e7a9"
    }
  }
]
